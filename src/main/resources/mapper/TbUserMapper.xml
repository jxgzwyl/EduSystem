<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zikool.edu.auth.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.zikool.edu.auth.bean.TbUser" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_identity_card" property="userIdentityCard" jdbcType="CHAR" />
    <result column="user_login_name" property="userLoginName" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="user_gender" property="userGender" jdbcType="CHAR" />
    <result column="user_organization" property="userOrganization" jdbcType="VARCHAR" />
    <result column="user_grade" property="userGrade" jdbcType="VARCHAR" />
    <result column="user_professional" property="userProfessional" jdbcType="VARCHAR" />
    <result column="teach_subject" property="teachSubject" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="blog" property="blog" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="organization_id" property="organizationId" jdbcType="INTEGER" />
    <result column="administrator_id" property="administratorId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    *
    from tb_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  
  <select id="selectBySql" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    *
    from tb_user
    where 1=1 and #{whereSql,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.zikool.edu.auth.bean.TbUser" >
    insert into tb_user (user_id, user_name, user_identity_card, 
      user_login_name, role_name, user_gender, 
      user_organization, user_grade, user_professional, 
      teach_subject, phone, email, 
      qq, blog, address, 
      password, organization_id, administrator_id, 
      role_id)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userIdentityCard,jdbcType=CHAR}, 
      #{userLoginName,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{userGender,jdbcType=CHAR}, 
      #{userOrganization,jdbcType=VARCHAR}, #{userGrade,jdbcType=VARCHAR}, #{userProfessional,jdbcType=VARCHAR}, 
      #{teachSubject,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{blog,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{organizationId,jdbcType=INTEGER}, #{administratorId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.zikool.edu.auth.bean.TbUser" >
    update tb_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_identity_card = #{userIdentityCard,jdbcType=CHAR},
      user_login_name = #{userLoginName,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      user_gender = #{userGender,jdbcType=CHAR},
      user_organization = #{userOrganization,jdbcType=VARCHAR},
      user_grade = #{userGrade,jdbcType=VARCHAR},
      user_professional = #{userProfessional,jdbcType=VARCHAR},
      teach_subject = #{teachSubject,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      blog = #{blog,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      organization_id = #{organizationId,jdbcType=INTEGER},
      administrator_id = #{administratorId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
</mapper>